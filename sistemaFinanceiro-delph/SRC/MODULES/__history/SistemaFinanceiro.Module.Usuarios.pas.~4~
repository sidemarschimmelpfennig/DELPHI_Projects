unit SistemaFinanceiro.Module.Usuarios;

interface

uses
  System.SysUtils, System.Classes, SistemaFinanceiro.Module.Conexao,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Datasnap.Provider, Datasnap.DBClient,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TModuleUsuarios = class(TDataModule)
    SQLUsuario: TFDQuery;
    CDSUsuarios: TClientDataSet;
    DSPUsuarios: TDataSetProvider;
    CDSUsuariosid: TStringField;
    CDSUsuariosnome: TStringField;
    CDSUsuarioslogin: TStringField;
    CDSUsuariossenha: TStringField;
    CDSUsuariosstatus: TStringField;
    CDSUsuariosdata_cadastro: TDateField;
  private
    { Private declarations }
  public
	 { Public declarations }
	 function TemLoginCadastrado(Login: String; Id: string): Boolean;
  end;

var
  ModuleUsuarios: TModuleUsuarios;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TModuleUsuarios }

function TModuleUsuarios.TemLoginCadastrado(Login, Id: string): Boolean;
var
	SQLConsulta: TFDQuery;
begin
	Result:= false;
	SQLConsulta:= TFDQuery.Create(nil);
	try
	  SQLConsulta.Connection := ModuleConexao.FBCONEXAO;
	  SQLConsulta.SQL.Clear;
	  SQLConsulta.SQL.Add('SELECT ID FROM USUARIOS WHERE LOGIN = :LOGIN');
	  SQLConsulta.ParamByName('LOGIN').AsString := Login;
	  SQLConsulta.Open;
	  if not SQLConsulta.IsEmpty then
		  Result:= SQLConsulta.FieldByName('ID').AsString;
		  
	finally
	  SQLConsulta.Close;
	  SQLConsulta.Free;
	end;
end;

end.
